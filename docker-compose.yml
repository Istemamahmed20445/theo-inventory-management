version: '3.8'

services:
  web:
    build: .
    ports:
      - "8000:8000"
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY:-your-super-secret-production-key-here}
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID:-your-project-id}
      - FIREBASE_STORAGE_BUCKET=${FIREBASE_STORAGE_BUCKET:-your-project-id.appspot.com}
    volumes:
      - ./static/uploads:/app/static/uploads
      - ./logs:/app/logs
      - ./firebase-service-account.json:/app/firebase-service-account.json:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx_production.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./static:/var/www/static:ro
    depends_on:
      - web
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
    networks:
      - app-network

  # Optional: Add a database service if needed
  # postgres:
  #   image: postgres:13
  #   environment:
  #     POSTGRES_DB: theo_inventory
  #     POSTGRES_USER: ${DB_USER:-theo_user}
  #     POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: unless-stopped
  #   networks:
  #     - app-network

  # Optional: Add Redis for caching
  # redis:
  #   image: redis:6-alpine
  #   restart: unless-stopped
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge

volumes:
  uploads:
  logs:
  # postgres_data:
